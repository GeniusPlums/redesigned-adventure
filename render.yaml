services:
  - type: web
    name: laudspeaker
    env: docker
    region: singapore
    plan: starter
    dockerCommand: docker-compose -f docker-compose.prod.yml build && docker-compose -f docker-compose.prod.yml up
    buildCommand: docker-compose -f docker-compose.prod.yml build
    envVars:
      # Database Configuration
      - key: DATABASE_URL
        sync: false  # Use Render Dashboard to set this
      - key: DATABASE_SSL
        value: "true"

      # Redis Configuration
      - key: REDIS_HOST
        sync: false
      - key: REDIS_PORT
        sync: false
      - key: REDIS_PASSWORD
        sync: false
      - key: REDIS_USERNAME
        sync: false

      # Clickhouse Configuration
      - key: CLICKHOUSE_HOST
        sync: false
      - key: CLICKHOUSE_PORT
        sync: false
      - key: CLICKHOUSE_USER
        sync: false
      - key: CLICKHOUSE_PASSWORD
        sync: false
      - key: CLICKHOUSE_DB
        sync: false

      # MongoDB Configuration
      - key: MONGODB_URI
        sync: false

      # Kafka Configuration
      - key: KAFKA_BROKERS
        sync: false
      - key: KAFKA_CLIENT_ID
        value: laudspeaker-client
      - key: KAFKA_GROUP_ID
        value: laudspeaker-consumer-group

      # Application Configuration
      - key: NODE_ENV
        value: production
      - key: JOURNEY_ONBOARDING
        value: "true"
      - key: SYNCHRONIZE
        value: "true"
      - key: PORT
        value: "3001"

      # Frontend Configuration
      - key: REACT_APP_API_BASE_URL
        value: https://laudspeaker.onrender.com  # Will be the URL of your service
      - key: REACT_APP_WS_BASE_URL
        value: wss://laudspeaker.onrender.com  # Will be the URL of your service

    healthCheckPath: /health

databases:
  - name: laudspeaker-db
